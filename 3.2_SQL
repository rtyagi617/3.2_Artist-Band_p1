DROP TABLE IF EXISTS song;
DROP TABLE IF EXISTS album;
DROP TABLE IF EXISTS member;
DROP TABLE IF EXISTS band;
DROP TABLE IF EXISTS artist;

CREATE TABLE artist(
artist_id int AUTO_INCREMENT PRIMARY KEY,
fname VARCHAR (25) not null,
lname VARCHAR (25) not null,
dob date not null,
gender VARCHAR (10) not null
) ENGINE = InnoDB;

CREATE table band (
band_id int AUTO_INCREMENT PRIMARY KEY,
title VARCHAR (25) not null,
year_formed date not null
) ENGINE = InnoDB;
CREATE TABLE member(
artistID int AUTO_INCREMENT,
bandID int not NULL,
date_joined date not null,
date_left date not null,
instrument VARCHAR(50) not null,
FOREIGN KEY (artistID) REFERENCES artist(artist_id),
FOREIGN KEY (bandID) REFERENCES band(band_id)
) ENGINE = InnoDB;

CREATE TABLE album(
album_id int AUTO_INCREMENT PRIMARY KEY,
title VARCHAR(25) not null,
year_published int (4) not null,
bandID int not NULL,
FOREIGN KEY (bandID) REFERENCES band(band_id)
) ENGINE = InnoDB;

CREATE TABLE song(
song_id int AUTO_INCREMENT PRIMARY KEY,
title VARCHAR (255) not null,
song_length time not null,
albumid int not NULL,
FOREIGN KEY (albumid) REFERENCES album(album_id)
) ENGINE = InnoDB;

INSERT INTO artist(artist_id,fname,lname,dob,gender) VALUES
(1,'Hadley', 'Blood', '1995-02-19', 'Male'),
(2,'Kerr', 'Brecher', '1997-12-12', 'Female'),
(3,'Mariellen', 'Alejandre','2004-11-3', 'Female'),
(4,'Nil', 'Curness', '1996-01-31', 'Male'),
(5,'Isacco', 'Kesby', '1999-09-20', 'Male');
INSERT INTO band (band_id,title,year_formed) VALUES
(1,'The Boys', '1978-07-14'),
(2,'Hoosier Dad', '1972-05-18'),
(3,'Block Rock', '1963-09-05'),
(4,'The Beatles', '1985-11-30'),
(5,'Metalica', '2001-03-22');

INSERT INTO member(artistID,bandID,date_joined,date_left,instrument) VALUES
(1, 5,'1997-03-10', '1998-07-20', 'Guitar'),
(1, 5,'2010-03-10', '2011-07-20', 'Guitar'),
(2, 5,'2005-03-10', '2010-08-20', 'Flute'),
(3, 5,'2005-03-10', '2010-06-20', 'Keytar'),
(4, 5,'2005-03-10', '2010-02-20', 'Tamborie'),
(5, 5,'2005-03-10', '2010-07-20', 'Guitar'),
(5, 4,'2008-06-15', '2012-09-25', 'Drums'),
(1, 4,'2005-03-10', '2010-09-20', 'Picalo'),
(2, 3,'2005-03-10', '2010-07-30', 'Trumpet'),
(3, 3,'2010-02-20', '2015-04-8', 'Bass'),
(1, 2,'2005-03-10', '2010-07-19', 'Triangle'),
(4, 2,'1998-09-03', '2004-11-18', 'Keyboard'),
(1, 2,'2005-03-10', '2010-07-12', 'Guitar'),
(3, 1,'2003-11-22', '2021-04-15', 'Vocals');

INSERT INTO album (album_id,title, year_published, bandID)
VALUES
(1, 'Heartbreaker', 2005, 3),
(2, 'Tough Love', 2010, 4),
(3, 'Insomniac', 2015, 5),
(4, 'Hydroxicut', 2000, 1),
(5, 'Peace of Mind', 2022, 2),
(6, 'Synchronised', 2000, 4),
(7, 'Enhanced', 2001, 3),
(8, 'Robust',2008, 2),
(9, 'analyzing', 2007, 3),
(10, 'flexibility',1965, 3),
(11, 'Vision-oriented', 2004, 3),
(12, 'Multi-channelled', 2010, 3),
(13, 'reciprocal', 1978, 1),
(14, 'secondary', 2011, 2),
(15, 'Profound', 2000, 1),
(16, 'explicit', 1997, 4),
(17, 'Programmable', 2000, 3),
(18, 'encompassing', 2004, 4),
(19, 'demand-driven', 2007, 4),
(20, 'complexity', 1988, 4);

INSERT INTO song (song_id,title, song_length, albumid)
VALUES
(1, 'parallelism', '18:39', 5),
(2, 'hub', '7:54', 20),
(3, 'disintermediate', '18:53', 7),
(4, 'database', '11:09', 14),
(5, 'Exclusive', '12:42', 18),
(6, 'neural-net', '17:28', 8),
(7, 'Managed', '9:51', 11),
(8, 'composite', '21:35', 15),
(9, 'workforce', '6:02', 4),
(10, 'knowledge user', '9:24', 3),
(11, 'Vision-oriented', '14:43', 14),
(12, 'dedicated', '9:59', 20),
(13, 'executive', '0:31', 12),
(14, 'Synergized', '23:39', 9),
(15, 'holistic', '9:44', 2),
(16, 'Profound', '19:00', 2),
(17, 'Total', '0:44', 5),
(18, 'multi-state', '7:27', 11),
(19, 'workforce', '19:44', 18),
(20, 'empowering', '12:29', 15),
(21, 'portal', '12:20', 13),
(22, 'Future-proofed', '5:05', 16),
(23, '5th generation', '1:14', 5),
(24, 'logistical', '7:30', 4),
(25, 'Profound', '10:30', 8),
(26, 'secured line', '1:12', 6),
(27, 'forecast', '23:06', 4),
(28, 'Synergized', '20:41', 7),
(29, 'monitoring', '8:36', 3),
(30, 'tangible', '4:31', 17),
(31, 'attitude', '15:36', 12),
(32, 'monitoring', '11:59', 2),
(33, 'Customer-focused', '1:10', 8),
(34, 'utilisation', '21:47', 9),
(35, 'disintermediate', '9:28', 12),
(36, 'core', '19:34', 2),
(37, 'Mandatory', '14:04', 11),
(38, 'De-engineered', '2:38', 12),
(39, 'moderator', '0:20', 20),
(40, 'customer loyalty', '15:20', 13);

SELECT title FROM album WHERE year_published = 2010;

SELECT b.title AS band_name, a.title AS album_title, s.title AS song_title
FROM song as s
JOIN album as a ON s.albumid = a.album_id
JOIN band as b ON a.bandID = b.band_id
WHERE s.song_length > '00:05:00';

SELECT s.title AS song_title, a.year_published as Album_year
FROM song s
JOIN album as a ON s.albumid = a.album_id
JOIN band as b ON a.bandID = b.band_id
WHERE b.band_id = 4;

SELECT b.title, CONCAT(a.fname, ' ', a.lname) AS artist
FROM band AS b
JOIN member AS m ON m.bandID = b.band_id
JOIN artist AS a ON a.artist_id = m.artistID
WHERE b.band_id = 1;
select a.title as Title, b.ti tle as Band_name
from band as b
join album as a on a.bandID = b.band_id
order by Band_name;

select s.title as Song_name, s.song_length as Song_Length
from song as s
where Song_Length > '5:00';
DROP TABLE IF EXISTS song;
DROP TABLE IF EXISTS album;
DROP TABLE IF EXISTS member;
DROP TABLE IF EXISTS band;
DROP TABLE IF EXISTS artist;

CREATE TABLE artist(
artist_id int AUTO_INCREMENT PRIMARY KEY,
fname VARCHAR (25) not null,
lname VARCHAR (25) not null,
dob date not null,
gender VARCHAR (10) not null
) ENGINE = InnoDB;

CREATE table band (
band_id int AUTO_INCREMENT PRIMARY KEY,
title VARCHAR (25) not null,
year_formed date not null
) ENGINE = InnoDB;
CREATE TABLE member(
artistID int AUTO_INCREMENT,
bandID int not NULL,
date_joined date not null,
date_left date not null,
instrument VARCHAR(50) not null,
FOREIGN KEY (artistID) REFERENCES artist(artist_id),
FOREIGN KEY (bandID) REFERENCES band(band_id)
) ENGINE = InnoDB;

CREATE TABLE album(
album_id int AUTO_INCREMENT PRIMARY KEY,
title VARCHAR(25) not null,
year_published int (4) not null,
bandID int not NULL,
FOREIGN KEY (bandID) REFERENCES band(band_id)
) ENGINE = InnoDB;

CREATE TABLE song(
song_id int AUTO_INCREMENT PRIMARY KEY,
title VARCHAR (255) not null,
song_length time not null,
albumid int not NULL,
FOREIGN KEY (albumid) REFERENCES album(album_id)
) ENGINE = InnoDB;

INSERT INTO artist(artist_id,fname,lname,dob,gender) VALUES
(1,'Hadley', 'Blood', '1995-02-19', 'Male'),
(2,'Kerr', 'Brecher', '1997-12-12', 'Female'),
(3,'Mariellen', 'Alejandre','2004-11-3', 'Female'),
(4,'Nil', 'Curness', '1996-01-31', 'Male'),
(5,'Isacco', 'Kesby', '1999-09-20', 'Male');

INSERT INTO band (band_id,title,year_formed) VALUES
(1,'The Boys', '1978-07-14'),
(2,'Hoosier Dad', '1972-05-18'),
(3,'Block Rock', '1963-09-05'),
(4,'The Beatles', '1985-11-30'),
(5,'Metalica', '2001-03-22');

INSERT INTO member(artistID,bandID,date_joined,date_left,instrument) VALUES
(1, 5,'1997-03-10', '1998-07-20', 'Guitar'),
(1, 5,'2010-03-10', '2011-07-20', 'Guitar'),
(2, 5,'2005-03-10', '2010-08-20', 'Flute'),
(3, 5,'2005-03-10', '2010-06-20', 'Keytar'),
(4, 5,'2005-03-10', '2010-02-20', 'Tamborie'),
(5, 5,'2005-03-10', '2010-07-20', 'Guitar'),
(5, 4,'2008-06-15', '2012-09-25', 'Drums'),
(1, 4,'2005-03-10', '2010-09-20', 'Picalo'),
(2, 3,'2005-03-10', '2010-07-30', 'Trumpet'),
(3, 3,'2010-02-20', '2015-04-8', 'Bass'),
(1, 2,'2005-03-10', '2010-07-19', 'Triangle'),
(4, 2,'1998-09-03', '2004-11-18', 'Keyboard'),
(1, 2,'2005-03-10', '2010-07-12', 'Guitar'),
(3, 1,'2003-11-22', '2021-04-15', 'Vocals');

INSERT INTO album (album_id,title, year_published, bandID)
VALUES
(1, 'Heartbreaker', 2005, 3),
(2, 'Tough Love', 2010, 4),
(3, 'Insomniac', 2015, 5),
(4, 'Hydroxicut', 2000, 1),
(5, 'Peace of Mind', 2022, 2),
(6, 'Synchronised', 2000, 4),
(7, 'Enhanced', 2001, 3),
(8, 'Robust',2008, 2),
(9, 'analyzing', 2007, 3),
(10, 'flexibility',1965, 3),
(11, 'Vision-oriented', 2004, 3),
(12, 'Multi-channelled', 2010, 3),
(13, 'reciprocal', 1978, 1),
(14, 'secondary', 2011, 2),
(15, 'Profound', 2000, 1),
(16, 'explicit', 1997, 4),
(17, 'Programmable', 2000, 3),
(18, 'encompassing', 2004, 4),
(19, 'demand-driven', 2007, 4),
(20, 'complexity', 1988, 4);

INSERT INTO song (song_id,title, song_length, albumid)
VALUES
(1, 'parallelism', '18:39', 5),
(2, 'hub', '7:54', 20),
(3, 'disintermediate', '18:53', 7),
(4, 'database', '11:09', 14),
(5, 'Exclusive', '12:42', 18),
(6, 'neural-net', '17:28', 8),
(7, 'Managed', '9:51', 11),
(8, 'composite', '21:35', 15),
(9, 'workforce', '6:02', 4),
(10, 'knowledge user', '9:24', 3),
(11, 'Vision-oriented', '14:43', 14),
(12, 'dedicated', '9:59', 20),
(13, 'executive', '0:31', 12),
(14, 'Synergized', '23:39', 9),
(15, 'holistic', '9:44', 2),
(16, 'Profound', '19:00', 2),
(17, 'Total', '0:44', 5),
(18, 'multi-state', '7:27', 11),
(19, 'workforce', '19:44', 18),
(20, 'empowering', '12:29', 15),
(21, 'portal', '12:20', 13),
(22, 'Future-proofed', '5:05', 16),
(23, '5th generation', '1:14', 5),
(24, 'logistical', '7:30', 4),
(25, 'Profound', '10:30', 8),
(26, 'secured line', '1:12', 6),
(27, 'forecast', '23:06', 4),
(28, 'Synergized', '20:41', 7),
(29, 'monitoring', '8:36', 3),
(30, 'tangible', '4:31', 17),
(31, 'attitude', '15:36', 12),
(32, 'monitoring', '11:59', 2),
(33, 'Customer-focused', '1:10', 8),
(34, 'utilisation', '21:47', 9),
(35, 'disintermediate', '9:28', 12),
(36, 'core', '19:34', 2),
(37, 'Mandatory', '14:04', 11),
(38, 'De-engineered', '2:38', 12),
(39, 'moderator', '0:20', 20),
(40, 'customer loyalty', '15:20', 13);

SELECT title FROM album WHERE year_published = 2010;

SELECT b.title AS band_name, a.title AS album_title, s.title AS song_title
FROM song as s
JOIN album as a ON s.albumid = a.album_id
JOIN band as b ON a.bandID = b.band_id
WHERE s.song_length > '00:05:00';

SELECT s.title AS song_title, a.year_published as Album_year
FROM song s
JOIN album as a ON s.albumid = a.album_id
JOIN band as b ON a.bandID = b.band_id
WHERE b.band_id = 4;

SELECT b.title, CONCAT(a.fname, ' ', a.lname) AS artist
FROM band AS b
JOIN member AS m ON m.bandID = b.band_id
JOIN artist AS a ON a.artist_id = m.artistID
WHERE b.band_id = 1;

select a.title as Title, b.ti tle as Band_name
from band as b
join album as a on a.bandID = b.band_id
order by Band_name;

select s.title as Song_name, s.song_length as Song_Length
from song as s
where Song_Length > '5:00';
